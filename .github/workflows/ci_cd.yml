name: CI & CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Format check with black
        run: |
          black . --check

  build-and-test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-Binance-api.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  deploy-wss:
    needs: build-and-test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Clean up destination
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "rm -rf /home/gittrustia/cicada-ingestion-Binance/*"

      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "/home/gittrustia/cicada-ingestion-Binance"

      - name: Run deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "/home/gittrustia/scripts/deploy_script_cicada_binance.sh"

      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: trustia-bot
          SLACK_ICON: https://avatars.slack-edge.com/2023-09-22/5933721900211_47a0bdc631150eb444cf_72.png
          SLACK_MESSAGE: "CICADA WSS deployed successfully! :rocket:"

  deploy-pipeline:
    needs: build-and-test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Clean up destination
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_SPARK }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "rm -rf /home/gittrustia/cicada-ingestion-Binance/*"

      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_SPARK }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "/home/gittrustia/cicada-ingestion-Binance"

      - name: Run deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_SPARK }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "/home/gittrustia/scripts/deploy_script_cicada_binance.sh"

      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: trustia-bot
          SLACK_ICON: https://avatars.slack-edge.com/2023-09-22/5933721900211_47a0bdc631150eb444cf_72.png
          SLACK_MESSAGE: "CICADA PIPELINE deployed successfully! :rocket:"
